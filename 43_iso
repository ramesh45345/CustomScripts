#!/bin/sh
set -e
#exec tail -n +3 $0

ISOFOLDER=""

prefix="/usr"
exec_prefix="/usr"
datarootdir="/usr/share"

. "${datarootdir}/grub/grub-mkconfig_lib"

export TEXTDOMAIN=grub
export TEXTDOMAINDIR="${datarootdir}/locale"

CLASS="--class gnu-linux --class gnu --class os"

if [ "x${GRUB_DISTRIBUTOR}" = "x" ] ; then
  OS=Linux
else
  OS="${GRUB_DISTRIBUTOR} Linux"
  CLASS="--class $(echo ${GRUB_DISTRIBUTOR} | tr 'A-Z' 'a-z' | cut -d' ' -f1|LC_ALL=C sed 's,[^[:alnum:]_],_,g') ${CLASS}"
fi

# loop-AES arranges things so that /dev/loop/X can be our root device, but
# the initrds that Linux uses don't like that.
#~ case ${GRUB_DEVICE} in
  #~ /dev/loop/*|/dev/loop[0-9])
    #~ GRUB_DEVICE=`losetup ${GRUB_DEVICE} | sed -e "s/^[^(]*(\([^)]\+\)).*/\1/"`
  #~ ;;
#~ esac

#~ if [ "x${GRUB_DEVICE_UUID}" = "x" ] || [ "x${GRUB_DISABLE_LINUX_UUID}" = "xtrue" ] \
    #~ || ! test -e "/dev/disk/by-uuid/${GRUB_DEVICE_UUID}" \
    #~ || uses_abstraction "${GRUB_DEVICE}" lvm; then
  #~ LINUX_ROOT_DEVICE=${GRUB_DEVICE}
#~ else
  #~ LINUX_ROOT_DEVICE=UUID=${GRUB_DEVICE_UUID}
#~ fi



for ISOFILES in "${ISOFOLDER}"/*.iso; do

	ISOLABEL="$(file -br "$ISOFILES" |  awk -F\' '{print $2}')"
	ISOFILENAME="$(basename $ISOFILES)"
	ISOFILEPATH="$(dirname $ISOFILES)"
	ISOFILESMOD="`make_system_path_relative_to_its_root $ISOFILES`"

	ISOHDNUM="`grub-probe --target=bios_hints $ISOFILEPATH`"
	ISOHDNUM="$(echo -e "${ISOHDNUM}" | sed -e 's/[[:space:]]*$//')"

	ISOHDUUID="`grub-probe --target=fs_uuid $ISOFILEPATH`"

	#echo "Rootsubvol: $rootsubvol"
	#echo "ISOFILES: $ISOFILES"
	#echo "ISOFILENAME: $ISOFILENAME"
	#echo "ISOFILEPATH: $ISOFILEPATH"
	#
	#echo "LINUX_ROOT_DEVICE: $LINUX_ROOT_DEVICE"
	#echo "ISOHDUUID: $ISOHDUUID"
	#echo "ISOFILESMOD: $ISOFILESMOD"
	
	# Boot parameters for Arch iso:
	# https://projects.archlinux.org/archiso.git/tree/docs/README.bootparams

	echo "
menuentry $ISOFILENAME {
	loopback loop (${ISOHDNUM})${ISOFILESMOD}
	linux (loop)/arch/boot/x86_64/vmlinuz archisolabel=$ISOLABEL img_dev=/dev/disk/by-uuid/$ISOHDUUID img_loop=$ISOFILESMOD earlymodules=loop copytoram=y
	#linux (loop)/arch/boot/x86_64/vmlinuz archisolabel=$ISOLABEL img_dev=/dev/sda3 img_loop=$ISOFILESMOD earlymodules=loop copytoram=y
	initrd (loop)/arch/boot/x86_64/archiso.img
}
"

done
